@using RiotAccountManager.MAUI.Data.Models

@if (Show)
{
    <div class="modal-backdrop">
        <div class="account-modal">
            <h2>@Title</h2>

            <div class="form-group">
                <label>Account name:</label>
                <InputText @bind-Value="Account.Nickname" 
                         class="form-control" 
                         placeholder="Nickname#Tagline" />
            </div>

            <div class="form-group">
                <label>Login:</label>
                <InputText @bind-Value="Account.Username" 
                         class="form-control" 
                         placeholder="Username" />
            </div>

            <div class="form-group">
                <label>Password:</label>
                <InputText type="password"
                           @bind-Value="Password"
                           @bind-Value:event="oninput"
                           class="form-control"
                           placeholder="@PlaceholderText" />
            </div>

            <div class="form-group">
                <label>Region:</label>
                <select @bind="Account.Region" class="form-control">
                    <option value="" disabled selected>Choose region...</option>
                    @foreach (var region in Regions)
                    {
                        <option value="@region">@region</option>
                    }
                </select>
            </div>

            <div class="form-footer">
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="error-message">
                        <i class="fas fa-exclamation-circle"></i>
                        @ErrorMessage
                    </div>
                }
                <button class="confirm-btn" @onclick="Save">
                    <i class="fas fa-save"></i> @ButtonText
                </button>
                <button class="cancel-btn" @onclick="Close">
                    <i class="fas fa-times"></i> Cancel
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool Show { get; set; }
    [Parameter] public Account Account { get; set; } = new();
    [Parameter] public List<string> Regions { get; set; } = new();
    [Parameter] public string ErrorMessage { get; set; } = string.Empty;
    [Parameter] public string Password { get; set; } = string.Empty;
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnSave { get; set; }

    private string Title => Account.IsExistingAccount() ? "Edit Account" : "Add New Account";
    private string ButtonText => Account.IsExistingAccount() ? "Update" : "Save";
    private string PlaceholderText => Account.IsExistingAccount() ? 
        "Leave empty to keep current" : 
        "Enter password";

    private async Task Save() => await OnSave.InvokeAsync();
    private async Task Close() => await OnClose.InvokeAsync();
}