@using RiotAccountManager.MAUI.Data.Models
<div class="account-list">
    @if (Accounts == null || !Accounts.Any())
    {
        <div class="empty-state">
            <i class="fas fa-user-circle"></i>
            <p>No accounts added yet. Click the "Add account" button to get started!</p>
        </div>
    }
    else
    {
        @foreach (var account in Accounts)
        {
            <div class="account-item" @key="account.Id">
                <div class="account-info">
                    <div class="account-details">
                        <h3 class="account-nickname">@account.Nickname</h3>
                        <div class="account-meta">
                            <span class="region-badge">@account.Region</span>
                            @if (account.LastLogin.HasValue)
                            {
                                <span class="last-login">
                                    <i class="fas fa-clock"></i>
                                    Last Login: @account.LastLogin.Value.ToString("g")
                                </span>
                            }
                        </div>
                    </div>
                </div>

                <div class="account-actions">
                    <button class="action-btn login-btn"
                            @onclick="@(() => OnLoginRequested.InvokeAsync(account))"
                            title="Login">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="btn-text">Login</span>
                    </button>

                    <button class="action-btn edit-btn"
                            @onclick="@(() => OnEditRequested.InvokeAsync(account.Id))"
                            title="Edit">
                        <i class="fas fa-edit"></i>
                        <span class="btn-text">Edit</span>
                    </button>

                    <button class="action-btn delete-btn"
                            @onclick="@(() => OnDeleteRequested.InvokeAsync(account.Id))"
                            title="Delete">
                        <i class="fas fa-trash-alt"></i>
                        <span class="btn-text">Delete</span>
                    </button>
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter] public List<Account>? Accounts { get; set; }

    [Parameter] public EventCallback<Account> OnLoginRequested { get; set; }

    [Parameter] public EventCallback<string> OnEditRequested { get; set; }

    [Parameter] public EventCallback<string> OnDeleteRequested { get; set; }
}
